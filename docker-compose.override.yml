version: '3.8'
services:

  orderservice:
    container_name: orderservice
    depends_on:
      - orderdb
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    volumes:
      - ./OrderService:/src
      - ~/.nuget/packages:/root/.nuget/packages:ro
      - ./logs:/app/logs
    ports:
      - "5000:80"
    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=1

  paymentservice:
    container_name: paymentservice
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    volumes:
      - ./PaymentService:/src
      - ~/.nuget/packages:/root/.nuget/packages:ro
    ports:
      - "5001:80"
    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=1
  
  notificationservice:
    container_name: notificationservice
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    ports:
      - "5002:80"
    volumes:
      - ./NotificationService:/src
      - ~/.nuget/packages:/root/.nuget/packages:ro
    depends_on:
      - rabbitmq
      - notificationdb
    environment:
      - DOTNET_USE_POLLING_FILE_WATCHER=1

  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"
    volumes:
      - seq-data:/data
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - network.host=0.0.0.0  # Adição crítica
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - elastic-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
      - NODE_OPTIONS="--openssl-legacy-provider"
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  seq-data:
  es-data:

networks:
  elastic-net:
    driver: bridge
