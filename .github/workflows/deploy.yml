name: üöÄ Deploy para GHCR

on:
  push:
    branches: [ main ]

jobs:
  docker-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: üìÖ Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üîê Login no GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: üèóÔ∏è Build e Push OrderService
        run: |
          TAG=$(echo "${GITHUB_SHA}" | cut -c1-7)
          docker build -t ghcr.io/${{ github.repository_owner }}/orderservice:latest \
                       -t ghcr.io/${{ github.repository_owner }}/orderservice:$TAG \
                       -f OrderService/Dockerfile .
          docker push ghcr.io/${{ github.repository_owner }}/orderservice:latest
          docker push ghcr.io/${{ github.repository_owner }}/orderservice:$TAG

      - name: üèóÔ∏è Build e Push PaymentService
        run: |
          TAG=$(echo "${GITHUB_SHA}" | cut -c1-7)
          docker build -t ghcr.io/${{ github.repository_owner }}/paymentservice:latest \
                       -t ghcr.io/${{ github.repository_owner }}/paymentservice:$TAG \
                       -f PaymentService/Dockerfile .
          docker push ghcr.io/${{ github.repository_owner }}/paymentservice:latest
          docker push ghcr.io/${{ github.repository_owner }}/paymentservice:$TAG

      - name: üèóÔ∏è Build e Push NotificationService
        run: |
          TAG=$(echo "${GITHUB_SHA}" | cut -c1-7)
          docker build -t ghcr.io/${{ github.repository_owner }}/notificationservice:latest \
                       -t ghcr.io/${{ github.repository_owner }}/notificationservice:$TAG \
                       -f NotificationService/Dockerfile .
          docker push ghcr.io/${{ github.repository_owner }}/notificationservice:latest
          docker push ghcr.io/${{ github.repository_owner }}/notificationservice:$TAG
